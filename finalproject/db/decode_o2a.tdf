--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=17 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_o2a
( 
	data[4..0]	:	input;
	eq[16..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[16..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1073w[2..0]	: WIRE;
	w_anode1087w[3..0]	: WIRE;
	w_anode1104w[3..0]	: WIRE;
	w_anode1114w[3..0]	: WIRE;
	w_anode1124w[3..0]	: WIRE;
	w_anode1134w[3..0]	: WIRE;
	w_anode1144w[3..0]	: WIRE;
	w_anode1154w[3..0]	: WIRE;
	w_anode1164w[3..0]	: WIRE;
	w_anode1176w[2..0]	: WIRE;
	w_anode1186w[3..0]	: WIRE;
	w_anode1197w[3..0]	: WIRE;
	w_anode1207w[3..0]	: WIRE;
	w_anode1217w[3..0]	: WIRE;
	w_anode1227w[3..0]	: WIRE;
	w_anode1237w[3..0]	: WIRE;
	w_anode1247w[3..0]	: WIRE;
	w_anode1257w[3..0]	: WIRE;
	w_anode1268w[2..0]	: WIRE;
	w_anode1278w[3..0]	: WIRE;
	w_anode1289w[3..0]	: WIRE;
	w_anode1299w[3..0]	: WIRE;
	w_anode1309w[3..0]	: WIRE;
	w_anode1319w[3..0]	: WIRE;
	w_anode1329w[3..0]	: WIRE;
	w_anode1339w[3..0]	: WIRE;
	w_anode1349w[3..0]	: WIRE;
	w_anode1360w[2..0]	: WIRE;
	w_anode1370w[3..0]	: WIRE;
	w_anode1381w[3..0]	: WIRE;
	w_anode1391w[3..0]	: WIRE;
	w_anode1401w[3..0]	: WIRE;
	w_anode1411w[3..0]	: WIRE;
	w_anode1421w[3..0]	: WIRE;
	w_anode1431w[3..0]	: WIRE;
	w_anode1441w[3..0]	: WIRE;
	w_data1071w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[16..0] = eq_wire[16..0];
	eq_wire[] = ( ( w_anode1441w[3..3], w_anode1431w[3..3], w_anode1421w[3..3], w_anode1411w[3..3], w_anode1401w[3..3], w_anode1391w[3..3], w_anode1381w[3..3], w_anode1370w[3..3]), ( w_anode1349w[3..3], w_anode1339w[3..3], w_anode1329w[3..3], w_anode1319w[3..3], w_anode1309w[3..3], w_anode1299w[3..3], w_anode1289w[3..3], w_anode1278w[3..3]), ( w_anode1257w[3..3], w_anode1247w[3..3], w_anode1237w[3..3], w_anode1227w[3..3], w_anode1217w[3..3], w_anode1207w[3..3], w_anode1197w[3..3], w_anode1186w[3..3]), ( w_anode1164w[3..3], w_anode1154w[3..3], w_anode1144w[3..3], w_anode1134w[3..3], w_anode1124w[3..3], w_anode1114w[3..3], w_anode1104w[3..3], w_anode1087w[3..3]));
	w_anode1073w[] = ( (w_anode1073w[1..1] & (! data_wire[4..4])), (w_anode1073w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1087w[] = ( (w_anode1087w[2..2] & (! w_data1071w[2..2])), (w_anode1087w[1..1] & (! w_data1071w[1..1])), (w_anode1087w[0..0] & (! w_data1071w[0..0])), w_anode1073w[2..2]);
	w_anode1104w[] = ( (w_anode1104w[2..2] & (! w_data1071w[2..2])), (w_anode1104w[1..1] & (! w_data1071w[1..1])), (w_anode1104w[0..0] & w_data1071w[0..0]), w_anode1073w[2..2]);
	w_anode1114w[] = ( (w_anode1114w[2..2] & (! w_data1071w[2..2])), (w_anode1114w[1..1] & w_data1071w[1..1]), (w_anode1114w[0..0] & (! w_data1071w[0..0])), w_anode1073w[2..2]);
	w_anode1124w[] = ( (w_anode1124w[2..2] & (! w_data1071w[2..2])), (w_anode1124w[1..1] & w_data1071w[1..1]), (w_anode1124w[0..0] & w_data1071w[0..0]), w_anode1073w[2..2]);
	w_anode1134w[] = ( (w_anode1134w[2..2] & w_data1071w[2..2]), (w_anode1134w[1..1] & (! w_data1071w[1..1])), (w_anode1134w[0..0] & (! w_data1071w[0..0])), w_anode1073w[2..2]);
	w_anode1144w[] = ( (w_anode1144w[2..2] & w_data1071w[2..2]), (w_anode1144w[1..1] & (! w_data1071w[1..1])), (w_anode1144w[0..0] & w_data1071w[0..0]), w_anode1073w[2..2]);
	w_anode1154w[] = ( (w_anode1154w[2..2] & w_data1071w[2..2]), (w_anode1154w[1..1] & w_data1071w[1..1]), (w_anode1154w[0..0] & (! w_data1071w[0..0])), w_anode1073w[2..2]);
	w_anode1164w[] = ( (w_anode1164w[2..2] & w_data1071w[2..2]), (w_anode1164w[1..1] & w_data1071w[1..1]), (w_anode1164w[0..0] & w_data1071w[0..0]), w_anode1073w[2..2]);
	w_anode1176w[] = ( (w_anode1176w[1..1] & (! data_wire[4..4])), (w_anode1176w[0..0] & data_wire[3..3]), B"1");
	w_anode1186w[] = ( (w_anode1186w[2..2] & (! w_data1071w[2..2])), (w_anode1186w[1..1] & (! w_data1071w[1..1])), (w_anode1186w[0..0] & (! w_data1071w[0..0])), w_anode1176w[2..2]);
	w_anode1197w[] = ( (w_anode1197w[2..2] & (! w_data1071w[2..2])), (w_anode1197w[1..1] & (! w_data1071w[1..1])), (w_anode1197w[0..0] & w_data1071w[0..0]), w_anode1176w[2..2]);
	w_anode1207w[] = ( (w_anode1207w[2..2] & (! w_data1071w[2..2])), (w_anode1207w[1..1] & w_data1071w[1..1]), (w_anode1207w[0..0] & (! w_data1071w[0..0])), w_anode1176w[2..2]);
	w_anode1217w[] = ( (w_anode1217w[2..2] & (! w_data1071w[2..2])), (w_anode1217w[1..1] & w_data1071w[1..1]), (w_anode1217w[0..0] & w_data1071w[0..0]), w_anode1176w[2..2]);
	w_anode1227w[] = ( (w_anode1227w[2..2] & w_data1071w[2..2]), (w_anode1227w[1..1] & (! w_data1071w[1..1])), (w_anode1227w[0..0] & (! w_data1071w[0..0])), w_anode1176w[2..2]);
	w_anode1237w[] = ( (w_anode1237w[2..2] & w_data1071w[2..2]), (w_anode1237w[1..1] & (! w_data1071w[1..1])), (w_anode1237w[0..0] & w_data1071w[0..0]), w_anode1176w[2..2]);
	w_anode1247w[] = ( (w_anode1247w[2..2] & w_data1071w[2..2]), (w_anode1247w[1..1] & w_data1071w[1..1]), (w_anode1247w[0..0] & (! w_data1071w[0..0])), w_anode1176w[2..2]);
	w_anode1257w[] = ( (w_anode1257w[2..2] & w_data1071w[2..2]), (w_anode1257w[1..1] & w_data1071w[1..1]), (w_anode1257w[0..0] & w_data1071w[0..0]), w_anode1176w[2..2]);
	w_anode1268w[] = ( (w_anode1268w[1..1] & data_wire[4..4]), (w_anode1268w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1278w[] = ( (w_anode1278w[2..2] & (! w_data1071w[2..2])), (w_anode1278w[1..1] & (! w_data1071w[1..1])), (w_anode1278w[0..0] & (! w_data1071w[0..0])), w_anode1268w[2..2]);
	w_anode1289w[] = ( (w_anode1289w[2..2] & (! w_data1071w[2..2])), (w_anode1289w[1..1] & (! w_data1071w[1..1])), (w_anode1289w[0..0] & w_data1071w[0..0]), w_anode1268w[2..2]);
	w_anode1299w[] = ( (w_anode1299w[2..2] & (! w_data1071w[2..2])), (w_anode1299w[1..1] & w_data1071w[1..1]), (w_anode1299w[0..0] & (! w_data1071w[0..0])), w_anode1268w[2..2]);
	w_anode1309w[] = ( (w_anode1309w[2..2] & (! w_data1071w[2..2])), (w_anode1309w[1..1] & w_data1071w[1..1]), (w_anode1309w[0..0] & w_data1071w[0..0]), w_anode1268w[2..2]);
	w_anode1319w[] = ( (w_anode1319w[2..2] & w_data1071w[2..2]), (w_anode1319w[1..1] & (! w_data1071w[1..1])), (w_anode1319w[0..0] & (! w_data1071w[0..0])), w_anode1268w[2..2]);
	w_anode1329w[] = ( (w_anode1329w[2..2] & w_data1071w[2..2]), (w_anode1329w[1..1] & (! w_data1071w[1..1])), (w_anode1329w[0..0] & w_data1071w[0..0]), w_anode1268w[2..2]);
	w_anode1339w[] = ( (w_anode1339w[2..2] & w_data1071w[2..2]), (w_anode1339w[1..1] & w_data1071w[1..1]), (w_anode1339w[0..0] & (! w_data1071w[0..0])), w_anode1268w[2..2]);
	w_anode1349w[] = ( (w_anode1349w[2..2] & w_data1071w[2..2]), (w_anode1349w[1..1] & w_data1071w[1..1]), (w_anode1349w[0..0] & w_data1071w[0..0]), w_anode1268w[2..2]);
	w_anode1360w[] = ( (w_anode1360w[1..1] & data_wire[4..4]), (w_anode1360w[0..0] & data_wire[3..3]), B"1");
	w_anode1370w[] = ( (w_anode1370w[2..2] & (! w_data1071w[2..2])), (w_anode1370w[1..1] & (! w_data1071w[1..1])), (w_anode1370w[0..0] & (! w_data1071w[0..0])), w_anode1360w[2..2]);
	w_anode1381w[] = ( (w_anode1381w[2..2] & (! w_data1071w[2..2])), (w_anode1381w[1..1] & (! w_data1071w[1..1])), (w_anode1381w[0..0] & w_data1071w[0..0]), w_anode1360w[2..2]);
	w_anode1391w[] = ( (w_anode1391w[2..2] & (! w_data1071w[2..2])), (w_anode1391w[1..1] & w_data1071w[1..1]), (w_anode1391w[0..0] & (! w_data1071w[0..0])), w_anode1360w[2..2]);
	w_anode1401w[] = ( (w_anode1401w[2..2] & (! w_data1071w[2..2])), (w_anode1401w[1..1] & w_data1071w[1..1]), (w_anode1401w[0..0] & w_data1071w[0..0]), w_anode1360w[2..2]);
	w_anode1411w[] = ( (w_anode1411w[2..2] & w_data1071w[2..2]), (w_anode1411w[1..1] & (! w_data1071w[1..1])), (w_anode1411w[0..0] & (! w_data1071w[0..0])), w_anode1360w[2..2]);
	w_anode1421w[] = ( (w_anode1421w[2..2] & w_data1071w[2..2]), (w_anode1421w[1..1] & (! w_data1071w[1..1])), (w_anode1421w[0..0] & w_data1071w[0..0]), w_anode1360w[2..2]);
	w_anode1431w[] = ( (w_anode1431w[2..2] & w_data1071w[2..2]), (w_anode1431w[1..1] & w_data1071w[1..1]), (w_anode1431w[0..0] & (! w_data1071w[0..0])), w_anode1360w[2..2]);
	w_anode1441w[] = ( (w_anode1441w[2..2] & w_data1071w[2..2]), (w_anode1441w[1..1] & w_data1071w[1..1]), (w_anode1441w[0..0] & w_data1071w[0..0]), w_anode1360w[2..2]);
	w_data1071w[2..0] = data_wire[2..0];
END;
--VALID FILE

--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=17 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_vma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[16..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[16..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1009w[3..0]	: WIRE;
	w_anode1019w[3..0]	: WIRE;
	w_anode1029w[3..0]	: WIRE;
	w_anode1039w[3..0]	: WIRE;
	w_anode1049w[3..0]	: WIRE;
	w_anode1059w[3..0]	: WIRE;
	w_anode695w[2..0]	: WIRE;
	w_anode708w[3..0]	: WIRE;
	w_anode725w[3..0]	: WIRE;
	w_anode735w[3..0]	: WIRE;
	w_anode745w[3..0]	: WIRE;
	w_anode755w[3..0]	: WIRE;
	w_anode765w[3..0]	: WIRE;
	w_anode775w[3..0]	: WIRE;
	w_anode785w[3..0]	: WIRE;
	w_anode797w[2..0]	: WIRE;
	w_anode806w[3..0]	: WIRE;
	w_anode817w[3..0]	: WIRE;
	w_anode827w[3..0]	: WIRE;
	w_anode837w[3..0]	: WIRE;
	w_anode847w[3..0]	: WIRE;
	w_anode857w[3..0]	: WIRE;
	w_anode867w[3..0]	: WIRE;
	w_anode877w[3..0]	: WIRE;
	w_anode888w[2..0]	: WIRE;
	w_anode897w[3..0]	: WIRE;
	w_anode908w[3..0]	: WIRE;
	w_anode918w[3..0]	: WIRE;
	w_anode928w[3..0]	: WIRE;
	w_anode938w[3..0]	: WIRE;
	w_anode948w[3..0]	: WIRE;
	w_anode958w[3..0]	: WIRE;
	w_anode968w[3..0]	: WIRE;
	w_anode979w[2..0]	: WIRE;
	w_anode988w[3..0]	: WIRE;
	w_anode999w[3..0]	: WIRE;
	w_data693w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[16..0] = eq_wire[16..0];
	eq_wire[] = ( ( w_anode1059w[3..3], w_anode1049w[3..3], w_anode1039w[3..3], w_anode1029w[3..3], w_anode1019w[3..3], w_anode1009w[3..3], w_anode999w[3..3], w_anode988w[3..3]), ( w_anode968w[3..3], w_anode958w[3..3], w_anode948w[3..3], w_anode938w[3..3], w_anode928w[3..3], w_anode918w[3..3], w_anode908w[3..3], w_anode897w[3..3]), ( w_anode877w[3..3], w_anode867w[3..3], w_anode857w[3..3], w_anode847w[3..3], w_anode837w[3..3], w_anode827w[3..3], w_anode817w[3..3], w_anode806w[3..3]), ( w_anode785w[3..3], w_anode775w[3..3], w_anode765w[3..3], w_anode755w[3..3], w_anode745w[3..3], w_anode735w[3..3], w_anode725w[3..3], w_anode708w[3..3]));
	w_anode1009w[] = ( (w_anode1009w[2..2] & (! w_data693w[2..2])), (w_anode1009w[1..1] & w_data693w[1..1]), (w_anode1009w[0..0] & (! w_data693w[0..0])), w_anode979w[2..2]);
	w_anode1019w[] = ( (w_anode1019w[2..2] & (! w_data693w[2..2])), (w_anode1019w[1..1] & w_data693w[1..1]), (w_anode1019w[0..0] & w_data693w[0..0]), w_anode979w[2..2]);
	w_anode1029w[] = ( (w_anode1029w[2..2] & w_data693w[2..2]), (w_anode1029w[1..1] & (! w_data693w[1..1])), (w_anode1029w[0..0] & (! w_data693w[0..0])), w_anode979w[2..2]);
	w_anode1039w[] = ( (w_anode1039w[2..2] & w_data693w[2..2]), (w_anode1039w[1..1] & (! w_data693w[1..1])), (w_anode1039w[0..0] & w_data693w[0..0]), w_anode979w[2..2]);
	w_anode1049w[] = ( (w_anode1049w[2..2] & w_data693w[2..2]), (w_anode1049w[1..1] & w_data693w[1..1]), (w_anode1049w[0..0] & (! w_data693w[0..0])), w_anode979w[2..2]);
	w_anode1059w[] = ( (w_anode1059w[2..2] & w_data693w[2..2]), (w_anode1059w[1..1] & w_data693w[1..1]), (w_anode1059w[0..0] & w_data693w[0..0]), w_anode979w[2..2]);
	w_anode695w[] = ( (w_anode695w[1..1] & (! data_wire[4..4])), (w_anode695w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode708w[] = ( (w_anode708w[2..2] & (! w_data693w[2..2])), (w_anode708w[1..1] & (! w_data693w[1..1])), (w_anode708w[0..0] & (! w_data693w[0..0])), w_anode695w[2..2]);
	w_anode725w[] = ( (w_anode725w[2..2] & (! w_data693w[2..2])), (w_anode725w[1..1] & (! w_data693w[1..1])), (w_anode725w[0..0] & w_data693w[0..0]), w_anode695w[2..2]);
	w_anode735w[] = ( (w_anode735w[2..2] & (! w_data693w[2..2])), (w_anode735w[1..1] & w_data693w[1..1]), (w_anode735w[0..0] & (! w_data693w[0..0])), w_anode695w[2..2]);
	w_anode745w[] = ( (w_anode745w[2..2] & (! w_data693w[2..2])), (w_anode745w[1..1] & w_data693w[1..1]), (w_anode745w[0..0] & w_data693w[0..0]), w_anode695w[2..2]);
	w_anode755w[] = ( (w_anode755w[2..2] & w_data693w[2..2]), (w_anode755w[1..1] & (! w_data693w[1..1])), (w_anode755w[0..0] & (! w_data693w[0..0])), w_anode695w[2..2]);
	w_anode765w[] = ( (w_anode765w[2..2] & w_data693w[2..2]), (w_anode765w[1..1] & (! w_data693w[1..1])), (w_anode765w[0..0] & w_data693w[0..0]), w_anode695w[2..2]);
	w_anode775w[] = ( (w_anode775w[2..2] & w_data693w[2..2]), (w_anode775w[1..1] & w_data693w[1..1]), (w_anode775w[0..0] & (! w_data693w[0..0])), w_anode695w[2..2]);
	w_anode785w[] = ( (w_anode785w[2..2] & w_data693w[2..2]), (w_anode785w[1..1] & w_data693w[1..1]), (w_anode785w[0..0] & w_data693w[0..0]), w_anode695w[2..2]);
	w_anode797w[] = ( (w_anode797w[1..1] & (! data_wire[4..4])), (w_anode797w[0..0] & data_wire[3..3]), enable_wire);
	w_anode806w[] = ( (w_anode806w[2..2] & (! w_data693w[2..2])), (w_anode806w[1..1] & (! w_data693w[1..1])), (w_anode806w[0..0] & (! w_data693w[0..0])), w_anode797w[2..2]);
	w_anode817w[] = ( (w_anode817w[2..2] & (! w_data693w[2..2])), (w_anode817w[1..1] & (! w_data693w[1..1])), (w_anode817w[0..0] & w_data693w[0..0]), w_anode797w[2..2]);
	w_anode827w[] = ( (w_anode827w[2..2] & (! w_data693w[2..2])), (w_anode827w[1..1] & w_data693w[1..1]), (w_anode827w[0..0] & (! w_data693w[0..0])), w_anode797w[2..2]);
	w_anode837w[] = ( (w_anode837w[2..2] & (! w_data693w[2..2])), (w_anode837w[1..1] & w_data693w[1..1]), (w_anode837w[0..0] & w_data693w[0..0]), w_anode797w[2..2]);
	w_anode847w[] = ( (w_anode847w[2..2] & w_data693w[2..2]), (w_anode847w[1..1] & (! w_data693w[1..1])), (w_anode847w[0..0] & (! w_data693w[0..0])), w_anode797w[2..2]);
	w_anode857w[] = ( (w_anode857w[2..2] & w_data693w[2..2]), (w_anode857w[1..1] & (! w_data693w[1..1])), (w_anode857w[0..0] & w_data693w[0..0]), w_anode797w[2..2]);
	w_anode867w[] = ( (w_anode867w[2..2] & w_data693w[2..2]), (w_anode867w[1..1] & w_data693w[1..1]), (w_anode867w[0..0] & (! w_data693w[0..0])), w_anode797w[2..2]);
	w_anode877w[] = ( (w_anode877w[2..2] & w_data693w[2..2]), (w_anode877w[1..1] & w_data693w[1..1]), (w_anode877w[0..0] & w_data693w[0..0]), w_anode797w[2..2]);
	w_anode888w[] = ( (w_anode888w[1..1] & data_wire[4..4]), (w_anode888w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode897w[] = ( (w_anode897w[2..2] & (! w_data693w[2..2])), (w_anode897w[1..1] & (! w_data693w[1..1])), (w_anode897w[0..0] & (! w_data693w[0..0])), w_anode888w[2..2]);
	w_anode908w[] = ( (w_anode908w[2..2] & (! w_data693w[2..2])), (w_anode908w[1..1] & (! w_data693w[1..1])), (w_anode908w[0..0] & w_data693w[0..0]), w_anode888w[2..2]);
	w_anode918w[] = ( (w_anode918w[2..2] & (! w_data693w[2..2])), (w_anode918w[1..1] & w_data693w[1..1]), (w_anode918w[0..0] & (! w_data693w[0..0])), w_anode888w[2..2]);
	w_anode928w[] = ( (w_anode928w[2..2] & (! w_data693w[2..2])), (w_anode928w[1..1] & w_data693w[1..1]), (w_anode928w[0..0] & w_data693w[0..0]), w_anode888w[2..2]);
	w_anode938w[] = ( (w_anode938w[2..2] & w_data693w[2..2]), (w_anode938w[1..1] & (! w_data693w[1..1])), (w_anode938w[0..0] & (! w_data693w[0..0])), w_anode888w[2..2]);
	w_anode948w[] = ( (w_anode948w[2..2] & w_data693w[2..2]), (w_anode948w[1..1] & (! w_data693w[1..1])), (w_anode948w[0..0] & w_data693w[0..0]), w_anode888w[2..2]);
	w_anode958w[] = ( (w_anode958w[2..2] & w_data693w[2..2]), (w_anode958w[1..1] & w_data693w[1..1]), (w_anode958w[0..0] & (! w_data693w[0..0])), w_anode888w[2..2]);
	w_anode968w[] = ( (w_anode968w[2..2] & w_data693w[2..2]), (w_anode968w[1..1] & w_data693w[1..1]), (w_anode968w[0..0] & w_data693w[0..0]), w_anode888w[2..2]);
	w_anode979w[] = ( (w_anode979w[1..1] & data_wire[4..4]), (w_anode979w[0..0] & data_wire[3..3]), enable_wire);
	w_anode988w[] = ( (w_anode988w[2..2] & (! w_data693w[2..2])), (w_anode988w[1..1] & (! w_data693w[1..1])), (w_anode988w[0..0] & (! w_data693w[0..0])), w_anode979w[2..2]);
	w_anode999w[] = ( (w_anode999w[2..2] & (! w_data693w[2..2])), (w_anode999w[1..1] & (! w_data693w[1..1])), (w_anode999w[0..0] & w_data693w[0..0]), w_anode979w[2..2]);
	w_data693w[2..0] = data_wire[2..0];
END;
--VALID FILE
